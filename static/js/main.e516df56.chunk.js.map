{"version":3,"sources":["components/Home.js","App.js","reportWebVitals.js","index.js"],"names":["Home","useState","data","setData","searchData","setSearchData","useEffect","fetch","then","r","json","console","log","className","style","margin","placeholder","value","onChange","event","target","backgroundColor","marginBottom","marginTop","padding","filter","v","Country","includes","Brand","Variety","Style","map","Stars","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gMAkDeA,EAhDJ,WAAK,IAAD,EACMC,mBAAS,IADf,mBACRC,EADQ,KACHC,EADG,OAEkBF,mBAAS,IAF3B,mBAERG,EAFQ,KAEGC,EAFH,KAYX,OARJC,qBAAU,WACVC,MAAM,6CAA6CC,MAAK,SAACC,GAAD,OAAKA,EAAEC,UAAQF,MAAK,SAACC,GACzEN,EAAQM,GACRE,QAAQC,IAAIV,GACZS,QAAQC,IAAIH,QAEd,IAGM,mCACA,sBAAKI,UAAU,YAAf,UACA,uBAAOA,UAAU,GAAGC,MAAO,CAACC,OAAO,QAASC,YAAY,SAAUC,MAAOb,EAAYc,SAAU,SAACC,GAAD,OAASd,EAAcc,EAAMC,OAAOH,UACnI,sBAAKJ,UAAU,MAAMC,MAAO,CAACO,gBAAgB,UAAUC,aAAa,OAAOC,UAAU,OAAOC,QAAQ,OAApG,UACA,qBAAKX,UAAU,MAAf,mBACA,qBAAKA,UAAU,MAAf,qBACA,qBAAKA,UAAU,MAAf,mBACA,qBAAKA,UAAU,MAAf,qBACA,qBAAKA,UAAU,MAAf,sBAGKX,EAAKuB,QAAO,SAACC,GACd,MAAgB,KAAbtB,EAAwBsB,EAAEC,QAAQC,SAASxB,IAAesB,EAAEG,MAAMD,SAASxB,IAAesB,EAAEI,QAAQF,SAASxB,IAAesB,EAAEK,MAAMH,SAASxB,GAErIsB,KAGVM,KAAI,SAACf,GACF,OACI,mCACA,sBAAKJ,UAAU,WAAf,UACA,qBAAKA,UAAU,MAAf,SAAsBI,EAAMY,QAC5B,qBAAKhB,UAAU,MAAf,SAAsBI,EAAMa,UAC5B,qBAAKjB,UAAU,MAAf,SAAsBI,EAAMc,QAC5B,qBAAKlB,UAAU,MAAf,SAAsBI,EAAMU,UAC5B,qBAAKd,UAAU,MAAf,SAAsBI,EAAMgB,sBC7BjCC,MARf,WACE,OACE,qBAAKrB,UAAU,MAAf,SACC,cAAC,EAAD,OCMUsB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB7B,MAAK,YAAkD,IAA/C8B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.e516df56.chunk.js","sourcesContent":["import React,{useState,useEffect} from 'react';\r\n\r\nconst Home=()=>{\r\nconst [data,setData]=useState([]);\r\nconst [searchData,setSearchData]=useState('');\r\n\r\nuseEffect(()=>{\r\nfetch('https://serverfake.herokuapp.com/topRamen').then((r)=>r.json()).then((r)=>{\r\n    setData(r);\r\n    console.log(data)  \r\n    console.log(r)\r\n})\r\n},[])\r\n\r\n    return (\r\n        <>\r\n        <div className=\"container\">\r\n        <input className=\"\" style={{margin:\"10px\"}} placeholder=\"Search\"  value={searchData} onChange={(event)=>setSearchData(event.target.value)}/>\r\n        <div className=\"row\" style={{backgroundColor:\"#E7E6DD\",marginBottom:\"10px\",marginTop:\"20px\",padding:\"5px\"}}>\r\n        <div className=\"col\">Brand</div>\r\n        <div className=\"col\">Variety</div>\r\n        <div className=\"col\">Style</div>\r\n        <div className=\"col\">Country</div>\r\n        <div className=\"col\">Stars</div>\r\n        </div>\r\n        \r\n            {data.filter((v)=>{\r\n            if(searchData!==''){return v.Country.includes(searchData) || v.Brand.includes(searchData) || v.Variety.includes(searchData) || v.Style.includes(searchData)  }\r\n            else{\r\n                return v;\r\n            }\r\n            }\r\n           ).map((value)=>{\r\n                return(\r\n                    <>\r\n                    <div className=\"row m-40\">\r\n                    <div className=\"col\">{value.Brand}</div>\r\n                    <div className=\"col\">{value.Variety}</div>\r\n                    <div className=\"col\">{value.Style}</div>\r\n                    <div className=\"col\">{value.Country}</div>\r\n                    <div className=\"col\">{value.Stars}</div>\r\n                    </div>\r\n                    </>\r\n                )\r\n            })}\r\n          \r\n        </div>\r\n        </>\r\n    )\r\n}\r\nexport default Home;","import './App.css';\nimport Home from './components/Home';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n     <Home/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}